name: Weekly Repository Analysis

on:
  schedule:
    # Run every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      deep_analysis:
        description: 'Perform deep analysis'
        required: false
        default: 'true'
        type: boolean
      sync_to_notion:
        description: 'Sync results to Notion'
        required: false
        default: 'true'
        type: boolean

# Establish automated repository intelligence gathering
# Best for: Organizations requiring scheduled portfolio analysis without manual intervention

jobs:
  analyze-repositories:
    name: Scan Organization Repositories
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.0

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate credentials
        env:
          AZURE_KEYVAULT_NAME: ${{ secrets.AZURE_KEYVAULT_NAME }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          GITHUB_ORG: ${{ secrets.GITHUB_ORG }}
        run: |
          echo "‚úì Validating Azure authentication..."
          az account show

          echo "‚úì Validating Key Vault access..."
          az keyvault secret list \
            --vault-name $AZURE_KEYVAULT_NAME \
            --query "[].name" -o tsv

          echo "‚úì Credentials validated successfully"

      - name: Run repository analysis
        env:
          AZURE_KEYVAULT_NAME: ${{ secrets.AZURE_KEYVAULT_NAME }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          GITHUB_ORG: ${{ secrets.GITHUB_ORG }}
          NOTION_WORKSPACE_ID: ${{ secrets.NOTION_WORKSPACE_ID }}
          ANALYSIS_CACHE_TTL_HOURS: "168"
          MAX_CONCURRENT_ANALYSES: "10"
          DEEP_ANALYSIS_ENABLED: ${{ github.event.inputs.deep_analysis || 'true' }}
          DETECT_CLAUDE_CONFIGS: "true"
          CALCULATE_COSTS: "true"
        run: |
          echo "üîç Starting repository analysis..."

          # Run full organization scan
          if [ "${{ github.event.inputs.sync_to_notion }}" == "true" ] || [ -z "${{ github.event.inputs.sync_to_notion }}" ]; then
            poetry run brookside-analyze scan --full --sync
          else
            poetry run brookside-analyze scan --full --no-sync
          fi

      - name: Generate analysis report
        if: always()
        run: |
          echo "üìä Analysis Report" > analysis-report.md
          echo "==================" >> analysis-report.md
          echo "" >> analysis-report.md
          echo "**Execution Time:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> analysis-report.md
          echo "**Triggered By:** ${{ github.event_name }}" >> analysis-report.md
          echo "**Deep Analysis:** ${{ github.event.inputs.deep_analysis || 'true' }}" >> analysis-report.md
          echo "**Notion Sync:** ${{ github.event.inputs.sync_to_notion || 'true' }}" >> analysis-report.md
          echo "" >> analysis-report.md
          echo "See workflow logs for detailed results." >> analysis-report.md

      - name: Upload analysis report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: analysis-report
          path: analysis-report.md
          retention-days: 30

      - name: Post results to GitHub summary
        if: always()
        run: |
          cat analysis-report.md >> $GITHUB_STEP_SUMMARY

  pattern-extraction:
    name: Extract Cross-Repository Patterns
    runs-on: ubuntu-latest
    needs: analyze-repositories
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.0

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Extract patterns
        env:
          AZURE_KEYVAULT_NAME: ${{ secrets.AZURE_KEYVAULT_NAME }}
          GITHUB_ORG: ${{ secrets.GITHUB_ORG }}
        run: |
          echo "üîç Extracting cross-repository patterns..."
          poetry run brookside-analyze patterns

      - name: Generate pattern report
        run: |
          echo "üìã Pattern Extraction Report" > pattern-report.md
          echo "=============================" >> pattern-report.md
          echo "" >> pattern-report.md
          echo "Pattern extraction completed successfully." >> pattern-report.md
          echo "" >> pattern-report.md
          echo "See workflow logs for identified patterns." >> pattern-report.md

      - name: Upload pattern report
        uses: actions/upload-artifact@v3
        with:
          name: pattern-report
          path: pattern-report.md
          retention-days: 30

  cost-analysis:
    name: Calculate Portfolio Costs
    runs-on: ubuntu-latest
    needs: analyze-repositories
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.0

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Calculate costs
        env:
          AZURE_KEYVAULT_NAME: ${{ secrets.AZURE_KEYVAULT_NAME }}
          GITHUB_ORG: ${{ secrets.GITHUB_ORG }}
        run: |
          echo "üí∞ Calculating portfolio costs..."
          poetry run brookside-analyze costs

      - name: Generate cost report
        run: |
          echo "üí∞ Cost Analysis Report" > cost-report.md
          echo "=======================" >> cost-report.md
          echo "" >> cost-report.md
          echo "Cost analysis completed successfully." >> cost-report.md
          echo "" >> cost-report.md
          echo "See workflow logs for detailed breakdown." >> cost-report.md

      - name: Upload cost report
        uses: actions/upload-artifact@v3
        with:
          name: cost-report
          path: cost-report.md
          retention-days: 30

  notification:
    name: Send Completion Notification
    runs-on: ubuntu-latest
    needs: [analyze-repositories, pattern-extraction, cost-analysis]
    if: always()

    steps:
      - name: Check workflow status
        run: |
          if [ "${{ needs.analyze-repositories.result }}" != "success" ]; then
            echo "‚ùå Repository analysis failed"
            exit 1
          fi

          echo "‚úÖ Weekly repository analysis completed successfully"
          echo ""
          echo "**Results:**"
          echo "- Repository Analysis: ${{ needs.analyze-repositories.result }}"
          echo "- Pattern Extraction: ${{ needs.pattern-extraction.result }}"
          echo "- Cost Analysis: ${{ needs.cost-analysis.result }}"
