{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(for dir in compliance supply-chain validators runtime)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(ls:*)",
      "Bash(done)",
      "Read(//c/Users/MarkusAhling/Downloads/**)",
      "Bash(chmod:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(bash:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(git --version)",
      "Bash(test:*)",
      "Bash(curl:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(cat c:UsersMarkusAhlingRealmOSRealmOStsconfig.json)",
      "Bash(cat:*)",
      "Bash(git pull:*)",
      "Bash(dir:*)",
      "Bash(where docker)",
      "Bash(az account show:*)",
      "Bash(az acr list:*)",
      "Bash(where az)",
      "Bash(where terraform)",
      "Bash($env:PATH -split ';')",
      "Bash(Select-String -Pattern \"Azure\")",
      "Bash(echo $env:PATH)",
      "Bash(Test-Path \"C:\\Program Files\\Microsoft SDKs\\Azure\\CLI2\\wbin\\az.cmd\")",
      "Bash(Test-Path \"C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\CLI2\\wbin\\az.cmd\")",
      "Bash(az acr show:*)",
      "Bash(az acr credential show:*)",
      "Bash(az group list:*)",
      "Read(//c/Users/MarkusAhling/**)",
      "Bash(terraform:*)",
      "Bash(where.exe:*)",
      "Bash(powershell.exe:*)",
      "Bash(git push:*)",
      "Bash(grep:*)",
      "Bash(az resource list:*)",
      "Bash(az postgres flexible-server list:*)",
      "Bash(az storage account show:*)",
      "Bash(tee:*)",
      "Bash(az keyvault secret show:*)",
      "Bash(az keyvault secret delete:*)",
      "Bash(az keyvault secret purge:*)",
      "Bash(az containerapp env delete:*)",
      "Bash(az network vnet subnet update:*)",
      "Bash(pnpm install:*)",
      "Bash(az keyvault network-rule add:*)",
      "Bash(tasklist)",
      "Bash(az redis show:*)",
      "Bash(az keyvault network-rule list:*)",
      "Bash(az keyvault:*)",
      "Bash(az postgres flexible-server show:*)",
      "Bash(az postgres flexible-server db create:*)",
      "Bash(az postgres flexible-server parameter set:*)",
      "Bash(az acr build:*)",
      "Bash(az acr task logs:*)",
      "Bash(az ad signed-in-user show:*)",
      "Bash(az keyvault secret list:*)",
      "Bash(az postgres flexible-server firewall-rule list:*)",
      "Bash(az containerapp env show:*)",
      "Bash(az postgres flexible-server update:*)",
      "Bash(az postgres flexible-server firewall-rule create:*)",
      "Bash(az monitor log-analytics workspace show:*)",
      "Bash(az monitor log-analytics workspace get-shared-keys:*)",
      "Bash(az containerapp env list:*)",
      "Bash(az containerapp env create:*)",
      "Bash(az containerapp logs show:*)",
      "Bash(az identity show:*)",
      "Bash(az containerapp create:*)",
      "Bash(az containerapp update:*)",
      "Bash(az containerapp revision:*)",
      "Bash(az containerapp:*)",
      "Bash(timeout 30 az containerapp logs show --name ai-orchestrator-app --resource-group rg-realmworks-dev --tail 30)",
      "Bash(az containerapp show:*)",
      "Bash(timeout:*)",
      "Bash(az acr task:*)",
      "Bash(where node)",
      "Bash(where npx)",
      "Bash(echo $GITHUB_TOKEN)",
      "Bash(where gh)",
      "Bash(gh auth:*)",
      "Bash(npx:*)",
      "Bash(az network vnet subnet show:*)",
      "Bash(MSYS_NO_PATHCONV=1 terraform import module.compute.azurerm_container_app_environment.main /subscriptions/cfacbbe8-a2a3-445f-a188-68b3b35f0c84/resourceGroups/rg-realmworks-dev/providers/Microsoft.App/managedEnvironments/cae-realmworks-dev)",
      "Bash(where redis-cli)",
      "Bash(git log:*)",
      "Bash(export NODE_ENV=dev)",
      "Bash(export KEY_VAULT_NAME=kv-realmworks-dev)",
      "Bash(awk:*)",
      "Bash(Select-Object -First 50)",
      "Bash(find:*)",
      "Bash(PRINCIPAL_ID=\"74650a68-8b6f-43ff-84aa-d059314a3a23\")",
      "Bash(az monitor log-analytics query:*)",
      "Bash(az network vnet subnet list:*)",
      "Bash(az postgres flexible-server execute:*)",
      "Bash(DATABASE_URL=\"postgresql://realmworks_admin:Ch3Nh%5DJHF%5BJIZ-D%254TpEQ1H%23K%23zWx9C%26@realmworks-db-dev.postgres.database.azure.com:5432/ai_orchestrator?sslmode=require\" npx ts-node scripts/run-migrations.ts)",
      "Bash(xargs:*)",
      "Bash(dotnet build:*)",
      "Bash(git fetch:*)",
      "Bash(git stash push:*)",
      "Bash(az group:*)",
      "Bash(az account list-locations:*)",
      "Bash(az:*)",
      "Bash(python:*)",
      "WebFetch(domain:vitepress.dev)",
      "Bash(dotnet test:*)",
      "Bash(dotnet --version)",
      "Bash(where dotnet)",
      "Bash(dotnet --list-sdks)",
      "Bash(dotnet restore:*)",
      "Bash(dotnet list:*)",
      "Bash(dotnet sln:*)",
      "Bash(where trivy)",
      "Bash(python3:*)",
      "Bash(rm:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(1)",
      "Bash(docker-compose up:*)",
      "Bash(start powershell:*)",
      "Bash(docker-compose:*)",
      "Bash(/dev/null)",
      "Bash(uvicorn:*)",
      "Bash(pip install:*)",
      "Bash(gh pr list:*)",
      "Bash(where:*)",
      "Bash(git branch -a --no-merged)",
      "Bash(Badge.test.tsx)",
      "Bash(pip-audit --version)",
      "Bash(dotnet add AgentStudio.Data/AgentStudio.Data.csproj package Microsoft.Azure.Cosmos)",
      "Bash(dotnet add AgentStudio.Orchestration.Tests/AgentStudio.Orchestration.Tests.csproj package Microsoft.AspNetCore.Mvc.Testing)",
      "Bash(dotnet add AgentStudio.Orchestration.Tests/AgentStudio.Orchestration.Tests.csproj package Microsoft.AspNetCore.Mvc.Testing --version 8.0.11)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "github",
    "sentry",
    "filesystem",
    "postgres",
    "cosmos-memory",
    "redis-state",
    "vector-pinecone",
    "datadog",
    "kubernetes",
    "terraform",
    "vault",
    "confluence",
    "slack",
    "jira"
  ],
  "outputStyle": "agent-orchestrator"
}
