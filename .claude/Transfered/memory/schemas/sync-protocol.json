{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ai-orchestrator.com/schemas/sync-protocol.json",
  "title": "Synchronization Protocol Schema",
  "description": "Protocol definitions for distributed memory synchronization",
  "definitions": {
    "VectorClock": {
      "type": "object",
      "description": "Vector clock for causal ordering",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "Node identifier"
        },
        "clock": {
          "type": "object",
          "description": "Map of node IDs to timestamps",
          "patternProperties": {
            ".*": {
              "type": "number",
              "minimum": 0
            }
          }
        }
      },
      "required": ["nodeId", "clock"],
      "additionalProperties": false
    },
    "CRDTState": {
      "type": "object",
      "description": "CRDT state for conflict-free replication",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["g_counter", "pn_counter", "lww_element_set", "or_set", "lww_register"],
          "description": "CRDT type"
        },
        "replicaId": {
          "type": "string",
          "description": "Replica identifier"
        }
      },
      "required": ["type", "replicaId"],
      "oneOf": [
        {
          "properties": {
            "type": {
              "const": "g_counter"
            },
            "counters": {
              "type": "object",
              "description": "Map of replica IDs to counter values",
              "patternProperties": {
                ".*": {
                  "type": "number",
                  "minimum": 0
                }
              }
            }
          },
          "required": ["counters"]
        },
        {
          "properties": {
            "type": {
              "const": "pn_counter"
            },
            "positive": {
              "$ref": "#/definitions/CRDTState"
            },
            "negative": {
              "$ref": "#/definitions/CRDTState"
            }
          },
          "required": ["positive", "negative"]
        },
        {
          "properties": {
            "type": {
              "const": "lww_element_set"
            },
            "addSet": {
              "type": "object",
              "description": "Elements with add timestamps",
              "patternProperties": {
                ".*": {
                  "type": "number"
                }
              }
            },
            "removeSet": {
              "type": "object",
              "description": "Elements with remove timestamps",
              "patternProperties": {
                ".*": {
                  "type": "number"
                }
              }
            }
          },
          "required": ["addSet", "removeSet"]
        },
        {
          "properties": {
            "type": {
              "const": "or_set"
            },
            "elements": {
              "type": "object",
              "description": "Elements with unique tags",
              "patternProperties": {
                ".*": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": ["elements"]
        },
        {
          "properties": {
            "type": {
              "const": "lww_register"
            },
            "value": {
              "description": "Register value"
            },
            "timestamp": {
              "type": "number",
              "description": "Last write timestamp"
            }
          },
          "required": ["value", "timestamp"]
        }
      ]
    },
    "GossipMessage": {
      "type": "object",
      "description": "Gossip protocol message",
      "properties": {
        "id": {
          "type": "string",
          "description": "Message identifier"
        },
        "type": {
          "type": "string",
          "enum": ["sync_request", "sync_response", "push", "pull", "push_pull", "ping", "pong"],
          "description": "Message type"
        },
        "senderId": {
          "type": "string",
          "description": "Sender identifier"
        },
        "recipientId": {
          "type": "string",
          "description": "Recipient identifier"
        },
        "state": {
          "type": "object",
          "description": "State data"
        },
        "vectorClock": {
          "$ref": "#/definitions/VectorClock"
        },
        "timestamp": {
          "type": "number",
          "description": "Message timestamp",
          "minimum": 0
        }
      },
      "required": ["id", "type", "senderId", "recipientId", "state", "vectorClock", "timestamp"],
      "additionalProperties": false
    },
    "PeerInfo": {
      "type": "object",
      "description": "Peer information for gossip protocol",
      "properties": {
        "id": {
          "type": "string",
          "description": "Peer identifier"
        },
        "address": {
          "type": "string",
          "description": "Peer address (host:port)",
          "pattern": "^[^:]+:\\d+$"
        },
        "status": {
          "type": "string",
          "enum": ["alive", "suspect", "dead"],
          "description": "Peer status"
        },
        "lastSeen": {
          "type": "number",
          "description": "Last contact timestamp",
          "minimum": 0
        },
        "failureCount": {
          "type": "number",
          "description": "Consecutive failures",
          "minimum": 0
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata"
        }
      },
      "required": ["id", "address", "status", "lastSeen", "failureCount"],
      "additionalProperties": false
    },
    "RaftRPC": {
      "type": "object",
      "description": "Raft consensus RPC message",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["request_vote", "request_vote_response", "append_entries", "append_entries_response", "install_snapshot", "install_snapshot_response"],
          "description": "RPC type"
        },
        "term": {
          "type": "number",
          "description": "Sender's term",
          "minimum": 0
        },
        "senderId": {
          "type": "string",
          "description": "Sender node ID"
        },
        "recipientId": {
          "type": "string",
          "description": "Recipient node ID"
        },
        "payload": {
          "type": "object",
          "description": "RPC-specific payload"
        }
      },
      "required": ["type", "term", "senderId", "recipientId", "payload"],
      "additionalProperties": false
    },
    "LogEntry": {
      "type": "object",
      "description": "Raft log entry",
      "properties": {
        "term": {
          "type": "number",
          "description": "Term when entry was created",
          "minimum": 0
        },
        "index": {
          "type": "number",
          "description": "Entry index",
          "minimum": 1
        },
        "command": {
          "type": "string",
          "description": "Command to execute"
        },
        "data": {
          "description": "Command data"
        }
      },
      "required": ["term", "index", "command", "data"],
      "additionalProperties": false
    },
    "RaftSnapshot": {
      "type": "object",
      "description": "Raft state machine snapshot",
      "properties": {
        "lastIncludedIndex": {
          "type": "number",
          "description": "Last included log index",
          "minimum": 0
        },
        "lastIncludedTerm": {
          "type": "number",
          "description": "Last included log term",
          "minimum": 0
        },
        "data": {
          "type": "object",
          "description": "Snapshot data"
        }
      },
      "required": ["lastIncludedIndex", "lastIncludedTerm", "data"],
      "additionalProperties": false
    },
    "SyncEvent": {
      "type": "object",
      "description": "Memory synchronization event",
      "properties": {
        "id": {
          "type": "string",
          "description": "Event identifier"
        },
        "type": {
          "type": "string",
          "enum": ["state_update", "state_merge", "conflict_detected", "conflict_resolved", "peer_joined", "peer_left", "snapshot_created"],
          "description": "Event type"
        },
        "timestamp": {
          "type": "number",
          "description": "Event timestamp",
          "minimum": 0
        },
        "nodeId": {
          "type": "string",
          "description": "Node identifier"
        },
        "vectorClock": {
          "$ref": "#/definitions/VectorClock"
        },
        "data": {
          "description": "Event data"
        }
      },
      "required": ["id", "type", "timestamp", "nodeId", "vectorClock", "data"],
      "additionalProperties": false
    },
    "ConflictResolution": {
      "type": "object",
      "description": "Conflict resolution strategy",
      "properties": {
        "strategy": {
          "type": "string",
          "enum": ["lww", "crdt", "manual", "versioning"],
          "description": "Resolution strategy"
        },
        "conflictId": {
          "type": "string",
          "description": "Conflict identifier"
        },
        "items": {
          "type": "array",
          "description": "Conflicting items",
          "items": {
            "type": "object",
            "properties": {
              "nodeId": {
                "type": "string"
              },
              "value": {},
              "vectorClock": {
                "$ref": "#/definitions/VectorClock"
              }
            }
          }
        },
        "resolution": {
          "description": "Resolved value"
        },
        "timestamp": {
          "type": "number",
          "description": "Resolution timestamp"
        }
      },
      "required": ["strategy", "conflictId", "items", "resolution", "timestamp"],
      "additionalProperties": false
    }
  },
  "type": "object",
  "properties": {
    "vectorClock": {
      "$ref": "#/definitions/VectorClock"
    },
    "crdtState": {
      "$ref": "#/definitions/CRDTState"
    },
    "gossipMessage": {
      "$ref": "#/definitions/GossipMessage"
    },
    "peerInfo": {
      "$ref": "#/definitions/PeerInfo"
    },
    "raftRPC": {
      "$ref": "#/definitions/RaftRPC"
    },
    "logEntry": {
      "$ref": "#/definitions/LogEntry"
    },
    "raftSnapshot": {
      "$ref": "#/definitions/RaftSnapshot"
    },
    "syncEvent": {
      "$ref": "#/definitions/SyncEvent"
    },
    "conflictResolution": {
      "$ref": "#/definitions/ConflictResolution"
    }
  }
}
