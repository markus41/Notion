stateDiagram-v2
    [*] --> Begin: Start Saga Transaction

    Begin --> ReserveInventory: Step 1
    ReserveInventory --> ProcessPayment: Inventory Reserved
    ProcessPayment --> SendNotification: Payment Processed
    SendNotification --> UpdateAnalytics: Notification Sent
    UpdateAnalytics --> CommitTransaction: Analytics Updated
    CommitTransaction --> [*]: Success

    ReserveInventory --> CompensateNone: Reserve Failed
    CompensateNone --> [*]: Saga Failed (No Compensation Needed)

    ProcessPayment --> CompensateInventory: Payment Failed
    CompensateInventory --> RollbackComplete1
    RollbackComplete1 --> [*]: Saga Failed (Inventory Restored)

    SendNotification --> CompensatePayment: Notification Failed
    CompensatePayment --> CompensateInventory2: Payment Refunded
    CompensateInventory2 --> RollbackComplete2
    RollbackComplete2 --> [*]: Saga Failed (Full Rollback)

    UpdateAnalytics --> CompensateNotification: Analytics Failed
    CompensateNotification --> CompensatePayment2: Notification Reverted
    CompensatePayment2 --> CompensateInventory3: Payment Refunded
    CompensateInventory3 --> RollbackComplete3
    RollbackComplete3 --> [*]: Saga Failed (Full Rollback)

    note right of Begin
        Initialize saga context
        Start distributed transaction
        Generate correlation ID
        Set timeout (30 minutes)
    end note

    note right of ReserveInventory
        Forward Action:
        - Reserve items in inventory
        - Create reservation record
        - Set expiration (15 min)

        Compensation:
        - Release reservation
        - Update available quantity
    end note

    note right of ProcessPayment
        Forward Action:
        - Authorize payment
        - Create charge record
        - Mark as pending

        Compensation:
        - Refund payment
        - Cancel authorization
        - Update payment status
    end note

    note right of SendNotification
        Forward Action:
        - Send confirmation email
        - Create notification record
        - Update user preferences

        Compensation:
        - Send cancellation notice
        - Mark notification reverted
    end note

    note right of UpdateAnalytics
        Forward Action:
        - Record transaction metrics
        - Update user statistics
        - Publish event

        Compensation:
        - Delete analytics record
        - Revert statistics
    end note

    note right of CommitTransaction
        Finalize saga:
        - Mark all steps complete
        - Release locks
        - Publish success event
        - Clean up saga context
    end note

    note left of CompensateInventory
        Compensation Step 1:
        Execute compensation
        in reverse order of
        forward actions
    end note
