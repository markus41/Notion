%% SignalR Connection Lifecycle Management
%% Complete lifecycle of SignalR connections from establishment to termination
%% Version: 1.0
%% Last Updated: 2025-10-15
%% Related Docs: /guides/developer/signalr-integration, /api/realtime-events

stateDiagram-v2
    [*] --> Disconnected: Initial State

    Disconnected --> Connecting: Connect()
    Connecting --> Negotiating: Start Negotiation
    Negotiating --> Establishing: Get Connection Token

    Establishing --> Connected: WebSocket Open
    Establishing --> Fallback: WebSocket Failed

    Fallback --> SSEConnecting: Try Server-Sent Events
    SSEConnecting --> Connected: SSE Established
    SSEConnecting --> LongPolling: SSE Failed

    LongPolling --> Connected: Long Polling Active
    LongPolling --> Failed: All Transports Failed

    Connected --> Subscribed: Join Groups
    Subscribed --> Active: Ready for Messages

    Active --> Reconnecting: Connection Lost
    Active --> Disconnecting: User Disconnect

    Reconnecting --> Connected: Reconnect Success
    Reconnecting --> Disconnected: Max Retries Exceeded

    Disconnecting --> Disconnected: Clean Shutdown
    Failed --> Disconnected: Connection Failed

    Disconnected --> [*]: End

    note right of Connecting
        Client initiates connection
        with authentication token
    end note

    note right of Negotiating
        Server returns:
        - Connection ID
        - Available transports
        - Access token
    end note

    note right of Establishing
        Transport priority:
        1. WebSocket (best)
        2. Server-Sent Events
        3. Long Polling (fallback)
    end note

    note right of Active
        - Bidirectional messaging
        - Heartbeat every 15s
        - Auto-reconnect enabled
    end note

    note right of Reconnecting
        Exponential backoff:
        0s, 2s, 4s, 8s, 16s, 30s
        Max attempts: 6
    end note

    note left of Subscribed
        Group subscriptions:
        - workflow:{id}
        - user:{id}
        - tenant:{id}
    end note

    Connected --> KeepAlive: Ping Interval
    KeepAlive --> Connected: Pong Response
    KeepAlive --> Reconnecting: Timeout (30s)

    Active --> MessageReceived: Server Push
    MessageReceived --> ProcessMessage: Handle Event
    ProcessMessage --> Active: Continue

    Active --> SendMessage: Client Request
    SendMessage --> AwaitResponse: Invoke Method
    AwaitResponse --> Active: Response/Ack

    classDef connecting fill:#f59e0b,stroke:#d97706
    classDef connected fill:#10b981,stroke:#059669
    classDef error fill:#ef4444,stroke:#dc2626
    classDef active fill:#3b82f6,stroke:#2563eb

    class Connecting,Negotiating,Establishing connecting
    class Connected,Subscribed,Active connected
    class Failed,Disconnected error
    class Reconnecting,Fallback active