%%{init: {'theme':'base', 'themeVariables': { 'primaryColor':'#8b5cf6', 'primaryTextColor':'#fff', 'primaryBorderColor':'#7c3aed', 'lineColor':'#5c5c5c', 'secondaryColor':'#10b981', 'tertiaryColor':'#f59e0b'}}}%%

graph LR
    subgraph "Agent Studio Core"
        subgraph "Application Services"
            app["Application Core<br/>Business Logic"]
            adapter["Integration Adapter<br/>Pattern: Adapter"]
            gateway["API Gateway<br/>Pattern: Gateway"]
            circuit["Circuit Breaker<br/>Pattern: Resilience"]
            retry["Retry Manager<br/>Pattern: Retry"]
        end

        subgraph "Message Patterns"
            queue["Message Queue<br/>Pattern: Queue"]
            pubsub["Pub/Sub Bus<br/>Pattern: Publish-Subscribe"]
            saga["Saga Coordinator<br/>Pattern: Saga"]
            event["Event Store<br/>Pattern: Event Sourcing"]
        end

        subgraph "Data Patterns"
            cache["Cache Manager<br/>Pattern: Cache-Aside"]
            cdc["Change Data Capture<br/>Pattern: CDC"]
            sync["Data Synchronizer<br/>Pattern: Sync"]
            transform["ETL Pipeline<br/>Pattern: Transform"]
        end
    end

    subgraph "Authentication & Authorization"
        aad["Azure AD<br/>Protocol: OAuth 2.0<br/>---<br/>Token endpoint<br/>JWKS endpoint"]
        b2c["Azure AD B2C<br/>Protocol: OIDC<br/>---<br/>Social providers<br/>Custom policies"]
        jwt["JWT Validator<br/>---<br/>Token validation<br/>Claims extraction"]
    end

    subgraph "AI & Cognitive Services"
        openai["Azure OpenAI<br/>Protocol: REST<br/>---<br/>Completions API<br/>Embeddings API<br/>Rate: 100K TPM"]
        cognitive["Cognitive Services<br/>Protocol: REST<br/>---<br/>Vision API<br/>Speech API<br/>Language API"]
        search["Cognitive Search<br/>Protocol: REST<br/>---<br/>Vector search<br/>Semantic ranking"]
    end

    subgraph "Collaboration Platforms"
        github["GitHub<br/>Protocol: REST/GraphQL<br/>---<br/>Repos API<br/>Actions API<br/>Webhooks"]
        slack["Slack<br/>Protocol: Webhook/Socket<br/>---<br/>Incoming webhooks<br/>Slash commands<br/>Socket mode"]
        teams["Microsoft Teams<br/>Protocol: Graph API<br/>---<br/>Chat API<br/>Channel API<br/>Bot framework"]
        jira["Jira<br/>Protocol: REST<br/>---<br/>Issues API<br/>Projects API<br/>Webhooks"]
    end

    subgraph "Monitoring & Observability"
        insights["Application Insights<br/>Protocol: OpenTelemetry<br/>---<br/>Traces<br/>Metrics<br/>Logs"]
        prometheus["Prometheus<br/>Protocol: HTTP Pull<br/>---<br/>Metrics scraping<br/>PromQL queries"]
        grafana["Grafana<br/>Protocol: HTTP<br/>---<br/>Dashboards<br/>Alerts<br/>Annotations"]
        elastic["Elasticsearch<br/>Protocol: REST<br/>---<br/>Log aggregation<br/>Full-text search"]
    end

    subgraph "Data Storage"
        cosmos["Cosmos DB<br/>Protocol: SQL API<br/>---<br/>Documents<br/>Consistency levels<br/>Change feed"]
        blob["Blob Storage<br/>Protocol: REST/SDK<br/>---<br/>Block blobs<br/>Append blobs<br/>Page blobs"]
        redis["Redis Cache<br/>Protocol: RESP<br/>---<br/>Key-value<br/>Pub/sub<br/>Lua scripts"]
        postgres["PostgreSQL<br/>Protocol: Wire<br/>---<br/>Relational<br/>JSONB<br/>Full-text"]
    end

    subgraph "Messaging & Events"
        servicebus["Service Bus<br/>Protocol: AMQP<br/>---<br/>Queues<br/>Topics<br/>Dead-letter"]
        eventhub["Event Hub<br/>Protocol: AMQP/Kafka<br/>---<br/>Streaming<br/>Partitions<br/>Capture"]
        eventgrid["Event Grid<br/>Protocol: HTTP<br/>---<br/>Event routing<br/>Filtering<br/>Dead-letter"]
    end

    %% Core to Authentication
    app -->|Token request| gateway
    gateway -->|OAuth flow| aad
    gateway -->|OIDC flow| b2c
    gateway -->|Validate| jwt
    jwt -.->|Claims| app

    %% Core to AI Services
    app -->|Completion request| adapter
    adapter -->|HTTP + Retry| circuit
    circuit -->|Call API| openai
    openai -.->|Response| circuit
    circuit -.->|Success| adapter
    adapter -.->|Result| app

    adapter -->|Cognitive request| cognitive
    adapter -->|Search query| search

    %% Core to Collaboration
    queue -->|Webhook event| github
    pubsub -->|Post message| slack
    pubsub -->|Send to channel| teams
    saga -->|Create issue| jira

    github -.->|PR event| queue
    slack -.->|Command| queue
    teams -.->|Bot message| queue
    jira -.->|Issue update| event

    %% Core to Monitoring
    app -->|OTLP export| insights
    app -->|Metrics push| prometheus
    prometheus -->|Query| grafana
    app -->|Logs| elastic

    insights -.->|Alerts| queue
    grafana -.->|Dashboard| app

    %% Core to Storage
    cache -->|Read-through| cosmos
    cosmos -.->|Change feed| cdc
    cdc -->|Process changes| transform
    transform -->|Store| blob

    app -->|Get/Set| redis
    sync -->|Replicate| postgres

    %% Core to Messaging
    saga -->|Send message| servicebus
    event -->|Stream events| eventhub
    pubsub -->|Route events| eventgrid

    servicebus -.->|Message| queue
    eventhub -.->|Events| event
    eventgrid -.->|Delivery| pubsub

    %% Retry patterns
    retry -.->|Exponential backoff| circuit
    circuit -.->|Circuit open| retry

    classDef core fill:#3eaf7c,stroke:#2d8659,color:#fff
    classDef auth fill:#0078d4,stroke:#005a9e,color:#fff
    classDef ai fill:#8b5cf6,stroke:#7c3aed,color:#fff
    classDef collab fill:#f59e0b,stroke:#d97706,color:#000
    classDef monitor fill:#ef4444,stroke:#dc2626,color:#fff
    classDef storage fill:#10b981,stroke:#059669,color:#fff
    classDef messaging fill:#ec4899,stroke:#db2777,color:#fff

    class app,adapter,gateway,circuit,retry,queue,pubsub,saga,event,cache,cdc,sync,transform core
    class aad,b2c,jwt auth
    class openai,cognitive,search ai
    class github,slack,teams,jira collab
    class insights,prometheus,grafana,elastic monitor
    class cosmos,blob,redis,postgres storage
    class servicebus,eventhub,eventgrid messaging