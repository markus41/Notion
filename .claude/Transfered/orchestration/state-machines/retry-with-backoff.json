{
  "name": "Retry with Backoff State Machine",
  "description": "State machine for retry with exponential backoff",
  "initialState": "ready",
  "states": [
    {"name": "ready", "description": "Ready to execute", "type": "initial"},
    {"name": "validating_idempotency", "description": "Validating operation is idempotent", "type": "intermediate"},
    {"name": "checking_circuit_breaker", "description": "Checking circuit breaker status", "type": "intermediate"},
    {"name": "executing", "description": "Executing operation", "type": "intermediate"},
    {"name": "waiting", "description": "Waiting before retry", "type": "intermediate"},
    {"name": "calculating_backoff", "description": "Calculating backoff delay", "type": "intermediate"},
    {"name": "succeeded", "description": "Operation succeeded", "type": "final"},
    {"name": "exhausted", "description": "Retry attempts exhausted", "type": "final"},
    {"name": "non_retryable", "description": "Error is not retryable", "type": "final"}
  ],
  "transitions": [
    {"from": "ready", "to": "validating_idempotency", "event": "EXECUTE", "guard": "isRetryAttempt && hasIdempotencyCheck", "action": "validateIdempotency"},
    {"from": "ready", "to": "checking_circuit_breaker", "event": "EXECUTE", "guard": "!isRetryAttempt || !hasIdempotencyCheck", "action": "skipIdempotencyCheck"},
    {"from": "validating_idempotency", "to": "checking_circuit_breaker", "event": "IDEMPOTENCY_VALID", "guard": null, "action": "proceedToCircuitCheck"},
    {"from": "validating_idempotency", "to": "non_retryable", "event": "NOT_IDEMPOTENT", "guard": null, "action": "abortRetry"},
    {"from": "checking_circuit_breaker", "to": "executing", "event": "CIRCUIT_OK", "guard": "!hasCB || !circuitOpen", "action": "executeOperation"},
    {"from": "checking_circuit_breaker", "to": "non_retryable", "event": "CIRCUIT_OPEN", "guard": "hasCB && circuitOpen", "action": "abortDueToCircuit"},
    {"from": "executing", "to": "succeeded", "event": "SUCCESS", "guard": null, "action": "recordSuccess"},
    {"from": "executing", "to": "non_retryable", "event": "FAILURE", "guard": "!errorRetryable", "action": "abortNonRetryable"},
    {"from": "executing", "to": "exhausted", "event": "FAILURE", "guard": "errorRetryable && retriesExhausted", "action": "recordExhaustion"},
    {"from": "executing", "to": "calculating_backoff", "event": "FAILURE", "guard": "errorRetryable && !retriesExhausted", "action": "determineBackoff"},
    {"from": "calculating_backoff", "to": "waiting", "event": "BACKOFF_CALCULATED", "guard": null, "action": "startWaiting"},
    {"from": "waiting", "to": "ready", "event": "WAIT_COMPLETE", "guard": null, "action": "prepareRetry"}
  ],
  "errorStates": ["exhausted", "non_retryable"],
  "recoveryTransitions": []
}
