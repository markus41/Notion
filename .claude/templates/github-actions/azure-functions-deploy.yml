# ============================================================================
# Azure Functions CI/CD Pipeline
# ============================================================================
#
# Serverless deployment pipeline with automated testing and environment-specific
# deployment strategies for Azure Functions.
#
# Features:
# - Automated testing and code quality checks
# - Function app packaging with dependencies
# - Environment-specific deployments
# - Consumption and Premium plan support
# - Smoke testing post-deployment
#
# ============================================================================

name: Azure Functions Deployment

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - development
          - staging
          - production

env:
  PYTHON_VERSION: '3.11'
  AZURE_FUNCTIONAPP_NAME_DEV: func-${{ vars.APP_PREFIX }}-dev
  AZURE_FUNCTIONAPP_NAME_STAGING: func-${{ vars.APP_PREFIX }}-staging
  AZURE_FUNCTIONAPP_NAME_PROD: func-${{ vars.APP_PREFIX }}-prod

jobs:
  # ==========================================================================
  # JOB: Build and Test
  # ==========================================================================
  build-and-test:
    name: Build and Test Function App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          pytest tests/ -v --cov=. --cov-report=xml

      - name: Package function app
        run: |
          pip install -r requirements.txt --target .python_packages/lib/site-packages
          zip -r function-app.zip . -x ".git/*" -x ".github/*" -x "tests/*" -x "*.pyc" -x "__pycache__/*"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: function-package
          path: function-app.zip

  # ==========================================================================
  # JOB: Deploy to Development
  # ==========================================================================
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/develop'
    environment:
      name: development

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: function-package

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}
          package: function-app.zip
          scm-do-build-during-deployment: false

      - name: Wait for deployment
        run: sleep 30

      - name: Smoke test
        run: |
          curl -f https://${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}.azurewebsites.net/api/health || exit 1

  # ==========================================================================
  # JOB: Deploy to Staging
  # ==========================================================================
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    environment:
      name: staging

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: function-package

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_STAGING }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_STAGING }}
          package: function-app.zip
          scm-do-build-during-deployment: false

      - name: Smoke test
        run: |
          sleep 30
          curl -f https://${{ env.AZURE_FUNCTIONAPP_NAME_STAGING }}.azurewebsites.net/api/health || exit 1

  # ==========================================================================
  # JOB: Deploy to Production
  # ==========================================================================
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment:
      name: production

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: function-package

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}
          package: function-app.zip
          scm-do-build-during-deployment: false

      - name: Verify deployment
        run: |
          sleep 60
          curl -f https://${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}.azurewebsites.net/api/health || exit 1

      - name: Notify success
        if: success()
        run: echo "âœ… Production deployment successful"
